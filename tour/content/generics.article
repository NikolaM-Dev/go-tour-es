Genéricos
Go admite programación genérica utilizando parámetros de tipo. Esta lección muestra algunos ejemplos para emplear genéricos en tu código.

The Go Authors
Los autores de Go
https://golang.org

* Parámetros de un tipo

Las funciones en Go pueden ser escritas para trabajar con múltiples tipos usando parámetros de tipo. Los parámetros de tipo
de una función aparecen entre paréntesis, antes de los de la función.

  func Index[T comparable](s []T, x T) int

Esta declaración significa que `s` es una slice de cualquier tipo `T` que cumpla la restricción incorporada
`comparable`. `x` es también un valor del mismo tipo.

`comparable` es una restricción útil que permite utilizar los operadores `==` y
`!=` sobre valores del tipo. En este ejemplo, la utilizamos para comparar un valor
con todos los elementos del slice hasta encontrar una coincidencia. Esta función `Index` funciona
para cualquier tipo que admita la comparación.
.play generics/index.go

* Tipos genéricos

Además de funciones genéricas, Go también soporta tipos genéricos. Un tipo puede
parametrizarse con un parámetro de tipo, lo que podría ser útil para implementar
estructuras de datos genéricas.

Este ejemplo se muestra una declaración de tipo simple para una lista de un solo enlace
que contiene cualquier tipo de valor.

Como ejercicio, añade alguna funcionalidad a la implementación de esta lista.

.play generics/list.go

*  ¡Felicitaciones!

¡Has terminado esta lección!

Puedes volver a la lista de [[/tour/list][modules]] para saber qué aprender a continuación, o continuar con la [[javascript:click('.next-page')][siguiente lección]].
